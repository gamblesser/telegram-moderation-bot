from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils import executor
import os

TOKEN = os.getenv("BOT_TOKEN")
MODERATOR_ID = int(os.getenv("MODERATOR_ID"))
GROUP_ID = os.getenv("GROUP_ID")  # –ü—Ä–∏–º–µ—Ä: -1001234567890

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def start(msg: types.Message):
    await msg.answer("–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏, –∑–∞—á–µ–º —Ö–æ—á–µ—à—å –≤—Å—Ç—É–ø–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É.")

@dp.message_handler()
async def collect_request(msg: types.Message):
    kb = InlineKeyboardMarkup().add(
        InlineKeyboardButton("‚úÖ –ü—Ä–∏–Ω—è—Ç—å", callback_data=f"accept_{msg.from_user.id}"),
        InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_{msg.from_user.id}")
    )
    text = f"üì© –ó–∞—è–≤–∫–∞ –æ—Ç @{msg.from_user.username or msg.from_user.first_name}:\n\n{msg.text}"
    await bot.send_message(MODERATOR_ID, text, reply_markup=kb)
    await msg.answer("–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é.")

@dp.callback_query_handler(lambda c: c.data.startswith('accept_') or c.data.startswith('reject_'))
async def callback_handler(call: types.CallbackQuery):
    action, user_id = call.data.split('_')
    user_id = int(user_id)

    if action == "accept":
        invite = await bot.create_chat_invite_link(
            chat_id=GROUP_ID,
            member_limit=1,
            creates_join_request=False
        )
        join_button = InlineKeyboardMarkup().add(
            InlineKeyboardButton("üö™ –í—Å—Ç—É–ø–∏—Ç—å", url=invite.invite_link)
        )
        await bot.send_message(user_id, "‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞.", reply_markup=join_button)
        await call.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–Ω—è—Ç.")
    else:
        await bot.send_message(user_id, "‚ùå –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.")
        await call.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª–æ–Ω—ë–Ω.")

if __name__ == "__main__":
    executor.start_polling(dp)